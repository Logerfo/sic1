; Read a number and print out that many 1s (e.g. 3 -> [1, 1, 1])

    ; Instruction               ; Explanation
    subleq @tmp, @IN            ; Read input into tmp (e.g. read 3 and set tmp to -3)
    subleq @tmp, @one           ; Subtract one (e.g. set tmp to -4)
    subleq @count, @tmp         ; Negate tmp into count (e.g. set count to 4)
    
@loop:  
    subleq @count, @one, @HALT  ; Subtract one from count and halt if <= 0
    subleq @OUT, @n_one         ; Output 1 (note the constant is -1 since we'll be subtracting)
    subleq @zero, @zero, @loop  ; Jump to address 9

; State 
    @tmp:   .data 0
    @count: .data 0

; Constants 
    @zero:  .data 0
    @one:   .data 1
    @n_one: .data -1